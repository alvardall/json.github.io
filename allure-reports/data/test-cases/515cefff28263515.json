{"uid":"515cefff28263515","name":"get one post title","fullName":"test_dir1.test_posts#test_get_one_post","historyId":"70ab35c7191f8113561a4cc58b0171b6","time":{"start":1719304269212,"stop":1719304269265,"duration":53},"description":"get one post description","descriptionHtml":"<p>get one post description</p>\n","status":"failed","statusMessage":"AssertionError: ERROR: Incorrect status code\nassert 200 == 201\n +  where 200 = <Response [200]>.status_code","statusTrace":"new_post_id = 100\n\n    @allure.feature('POSTS')\n    @allure.story('GET ONE POST')\n    @allure.title('get one post title')\n    @allure.description('get one post description')\n    @allure.severity('critical')\n    @pytest.mark.smoke\n    def test_get_one_post(new_post_id):\n        with allure.step(f'Run get request for post with id {new_post_id}'):\n            response = requests.get(f'https://jsonplaceholder.typicode.com/posts/{new_post_id}')\n        with allure.step('Check Status Code'):\n>           assert response.status_code == 201, \"ERROR: Incorrect status code\"\nE           AssertionError: ERROR: Incorrect status code\nE           assert 200 == 201\nE            +  where 200 = <Response [200]>.status_code\n\ntest_dir1/test_posts.py:17: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"new_post_id","time":{"start":1719304268810,"stop":1719304269211,"duration":401},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"description":"get one post description","status":"failed","statusMessage":"AssertionError: ERROR: Incorrect status code\nassert 200 == 201\n +  where 200 = <Response [200]>.status_code","statusTrace":"new_post_id = 100\n\n    @allure.feature('POSTS')\n    @allure.story('GET ONE POST')\n    @allure.title('get one post title')\n    @allure.description('get one post description')\n    @allure.severity('critical')\n    @pytest.mark.smoke\n    def test_get_one_post(new_post_id):\n        with allure.step(f'Run get request for post with id {new_post_id}'):\n            response = requests.get(f'https://jsonplaceholder.typicode.com/posts/{new_post_id}')\n        with allure.step('Check Status Code'):\n>           assert response.status_code == 201, \"ERROR: Incorrect status code\"\nE           AssertionError: ERROR: Incorrect status code\nE           assert 200 == 201\nE            +  where 200 = <Response [200]>.status_code\n\ntest_dir1/test_posts.py:17: AssertionError","steps":[{"name":"Run get request for post with id 100","time":{"start":1719304269213,"stop":1719304269261,"duration":48},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Check Status Code","time":{"start":1719304269261,"stop":1719304269262,"duration":1},"status":"failed","statusMessage":"AssertionError: ERROR: Incorrect status code\nassert 200 == 201\n +  where 200 = <Response [200]>.status_code\n","statusTrace":"  File \"/home/alla/Desktop/QA/QA_LEVEL_UP/jsonplaceholder2/test_dir1/test_posts.py\", line 17, in test_get_one_post\n    assert response.status_code == 201, \"ERROR: Incorrect status code\"\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[{"uid":"3f226151cd7c3d4","name":"stdout","source":"3f226151cd7c3d4.txt","type":"text/plain","size":89}],"parameters":[],"stepsCount":2,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"new_post_id::0","time":{"start":1719304269416,"stop":1719304269608,"duration":192},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"story","value":"GET ONE POST"},{"name":"severity","value":"critical"},{"name":"feature","value":"POSTS"},{"name":"tag","value":"smoke"},{"name":"parentSuite","value":"test_dir1"},{"name":"suite","value":"test_posts"},{"name":"host","value":"alla-LIFEBOOK-E557"},{"name":"thread","value":"9022-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_dir1.test_posts"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Critical Tests","matchedStatuses":["failed"],"flaky":false}],"tags":["smoke"]},"source":"515cefff28263515.json","parameterValues":[]}